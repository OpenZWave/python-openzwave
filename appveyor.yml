environment:
  PYPI_USER:
    secure: yna6KiH2GE3Ka1G5a3TlUQ==
  PYPI_PASSWORD:
    secure: UpISOsYyHdCzurReV6FcTA==

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"


# allows RDP login to Appveyor when finished
# connection details will be shown
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

deploy:
  - provider: Environment
    name: production
    on:
      APPVEYOR_REPO_TAG: true

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  - "SET PATH=%PYTHON%/Scripts;%PATH%"
  - "SET PYTHONPATH=%PYTHON%"

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "%PYTHON%/python -m pip install --disable-pip-version-check --user --upgrade pip"

  # We need to update setup tools to ensure that the new setup program will
  # run properly.
  - "%PYTHON%/python -m pip install --upgrade setuptools"

build_script:
  # Install python-openzwave
  - "%PYTHON%/python setup.py install --flavor=dev"

test_script:
  # Run the project tests
  - "%PYTHON%/python -m pip install nose"
  - "%PYTHON%/scripts/pyozw_check"
  - "%PYTHON%/scripts/nosetests --verbose tests/lib/autobuild tests/api/autobuild"

after_test:
  # If tests are successful, create a wheel for the project.
  - "%PYTHON%/python setup.py bdist_wheel --flavor=dev"

artifacts:
  # Archive the wheel in the ci.appveyor.com build report.
  - path: dist/*.whl
    name: wheel

deploy_script:
  - "%PYTHON%/python -m pip install twine"
  # upload the wheel to pypi (windows only)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (echo "Uploading wheel")
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (set HOME=%USERPROFILE%)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (twine upload dist/*.whl --repository-url https://upload.pypi.org/legacy/ -u %PYPI_USER% -p %PYPI_PASSWORD%)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (echo "Finished Artifact Deployment" )
